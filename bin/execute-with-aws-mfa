#!/bin/bash

# Thanks to https://www.trek10.com/blog/awsume-aws-assume-made-awesome/ for inspiration and starting code

mfaSerial="$(aws configure get mfa_serial)"
if [[ -z "${mfaSerial}" ]]; then
	# No MFA device specified â€“ there's nothing more this script can provide, so
	# let's just call the target command
	${@}
	exit $?
fi

roleArn="$(aws configure get role_arn)"
if [[ -z "${roleArn}" ]]; then
	read -s -p "Enter MFA code for ${mfaSerial}: " mfaToken
	echo ""
	config=$(aws sts get-session-token --serial-number "${mfaSerial}" --token-code "${mfaToken}")
else
	config=$(aws sts assume-role --role-arn $(aws configure get role_arn) --role-session-name awsc)
fi

sessionToken=$(echo "${config}" | jq -r '.Credentials.SessionToken')

accessKeyId=$(echo "${config}" | jq -r '.Credentials.AccessKeyId')

secretAccessKey=$(echo "${config}" | jq -r '.Credentials.SecretAccessKey')

for variable in $(compgen -e | grep -E "^EXECUTE_WITH_AWS_MFA_PASSTHROUGH_"); do
	export ${variable#EXECUTE_WITH_AWS_MFA_PASSTHROUGH_}="${!variable}"
done

AWS_ACCESS_KEY_ID="${accessKeyId}" AWS_SECRET_ACCESS_KEY="${secretAccessKey}" AWS_SESSION_TOKEN="${sessionToken}" ${@}
exit $?
